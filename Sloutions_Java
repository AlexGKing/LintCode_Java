#1
给出两个整数a和b, 求他们的和, 但不能使用 + 等数学运算符。
提示：位操作

class Solution {
    /*
     * param a: The first integer
     * param b: The second integer
     * return: The sum of a and b
     */
    public int aplusb(int a, int b) {
        // write your code here, try to do it without arithmetic operators.
        int jw = a & b;
        int jg = a ^ b;
        while (jw>0){
            int ta = jg;
            int tb = jw << 1;
            jw = ta & tb;
            jg = ta ^ tb;
        }
        return jg;
    }
};

#2
设计一个算法，计算出n阶乘中尾部零的个数，例如：11! = 39916800，因此应该返回 2
要求：O(logN)的时间复杂度

class Solution {
    /*
     * param n: As desciption
     * return: An integer, denote the number of trailing zeros in n!
     */
    public long trailingZeros(long n) {
       long sum = 0;
        while (n != 0) {
            sum += n / 5;
            n /= 5;
        }
        return sum;
    }
};
